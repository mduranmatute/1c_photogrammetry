Base_Loc= '..\Examples\Data_Files\MATLAB\Calibration_data\';
SaveB_Loc='..\Examples\Data_Files\NETCDF\Calibration_Data\';

list = ls([Base_Loc '*.mat']);
[nz,~] = size(list);

for iz = 1:nz
    Filename = [Base_Loc, list(iz,:)];
    CalibData = load(Filename);

    % Linear model Poly33:
    % val(x,y) = p00 + p10*x + p01*y + p20*x^2 + p11*x*y + p02*y^2 + 
    %            p30*x^3 + p21*x^2*y + p12*x*y^2 + p03*y^3;
    
    CoeffCal_cdx = [CalibData.cdx.p00, ... % constant
                    CalibData.cdx.p10, ... % x
                    CalibData.cdx.p01, ... % y
                    CalibData.cdx.p20, ... % x^2
                    CalibData.cdx.p11, ... % xy
                    CalibData.cdx.p02, ... % y^2
                    CalibData.cdx.p30, ... % x^3
                    CalibData.cdx.p21, ... % x^2 y
                    CalibData.cdx.p12, ... % x y^2
                    CalibData.cdx.p03]; % y^3
                
    CoeffCal_cdy = [CalibData.cdy.p00, CalibData.cdy.p10, ...
                    CalibData.cdy.p01, CalibData.cdy.p20, ...
                    CalibData.cdy.p11, CalibData.cdy.p02, ... 
                    CalibData.cdy.p30, CalibData.cdy.p21, ...
                    CalibData.cdy.p12, CalibData.cdy.p03];
                
    CoeffCal_cx0 = [CalibData.cx0.p00, CalibData.cx0.p10, ...
                    CalibData.cx0.p01, CalibData.cx0.p20, ...
                    CalibData.cx0.p11, CalibData.cx0.p02, ... 
                    CalibData.cx0.p30, CalibData.cx0.p21, ...
                    CalibData.cx0.p12, CalibData.cx0.p03];
                
    CoeffCal_cy0 = [CalibData.cy0.p00, CalibData.cy0.p10, ...
                    CalibData.cy0.p01, CalibData.cy0.p20, ...
                    CalibData.cy0.p11, CalibData.cy0.p02, ... 
                    CalibData.cy0.p30, CalibData.cy0.p21, ...
                    CalibData.cy0.p12, CalibData.cy0.p03];
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                         Save to NETCDF files                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%========================================= Value of the variable dimensions
        N_dim = length(CoeffCal_cy0);
        NL = 1:N_dim;

%===================================================== Name and create file
        Name_sep = regexp(list(iz,:), '\.', 'split');
        NCF_name = [Name_sep{1} '.nc'];
        ncid = netcdf.create([SaveB_Loc NCF_name],'NC_WRITE');
        
%======================================================== Define dimensions
        dimidNCoef = netcdf.defDim(ncid,'Num_Coeff',N_dim);        
      
%=============================== Define IDs for the the dimension variables
        NPol_ID = netcdf.defVar(ncid,'Num_Coeff','NC_Byte',[dimidNCoef]);
        netcdf.putAtt(ncid,NPol_ID,'long_name',...
                                   'Number of coefficients');
        netcdf.putAtt(ncid,NPol_ID,'units','[]');
        netcdf.putAtt(ncid,NPol_ID,'description',['Number of ' ...
            'coefficients obtained from the 3rd order polynomial ' ...
            '(Linear model Poly33).']);        
%=============================================== Define ID for main varible
        Coeffdx_ID = netcdf.defVar(ncid,'cdx','double',...
            [dimidNCoef]);
        netcdf.putAtt(ncid,Coeffdx_ID,'long_name',['Coefficients ' ...
            'of the X vector component.']);
        netcdf.putAtt(ncid,Coeffdx_ID,'units','[]');
        netcdf.putAtt(ncid,Coeffdx_ID,'description',['Coefficients ' ...
            'of the X vector component obtained through calibration. ' ...
            'The coefficients are: [p00, p10, p01, p20, p11, p02, ' ...
            'p30, p21, p12, p03], such that the values represent: ' ...
            'val(x,y) = p00 + p10*x + p01*y + p20*x^2 + p11*x*y +  '...
            'p02*y^2 + p30*x^3 + p21*x^2*y + p12*x*y^2 + p03*y^3.']);
        
        Coeffdy_ID = netcdf.defVar(ncid,'cdy','double',...
            [dimidNCoef]);
        netcdf.putAtt(ncid,Coeffdy_ID,'long_name',['Coefficients ' ...
            'of the Y vector component.']);
        netcdf.putAtt(ncid,Coeffdy_ID,'units','[]');
        netcdf.putAtt(ncid,Coeffdy_ID,'description',['Coefficients ' ...
            'of the Y vector component obtained through calibration. ' ...
            'The coefficients are: [p00, p10, p01, p20, p11, p02, ' ...
            'p30, p21, p12, p03], such that the values represent: ' ...
            'val(x,y) = p00 + p10*x + p01*y + p20*x^2 + p11*x*y +  '...
            'p02*y^2 + p30*x^3 + p21*x^2*y + p12*x*y^2 + p03*y^3.']);
        
        Coeffx0_ID = netcdf.defVar(ncid,'cx0','double',...
            [dimidNCoef]);
        netcdf.putAtt(ncid,Coeffx0_ID,'long_name',['Coefficients ' ...
            'of the X component of the vector origins.']);
        netcdf.putAtt(ncid,Coeffx0_ID,'units','mm');
        netcdf.putAtt(ncid,Coeffx0_ID,'description',['Coefficients ' ...
            'of the vector origin component X. ' ...
            'The coefficients are: [p00, p10, p01, p20, p11, p02, ' ...
            'p30, p21, p12, p03], such that the values represent: ' ...
            'val(x,y) = p00 + p10*x + p01*y + p20*x^2 + p11*x*y +  '...
            'p02*y^2 + p30*x^3 + p21*x^2*y + p12*x*y^2 + p03*y^3.']);
        
        Coeffy0_ID = netcdf.defVar(ncid,'cy0','double',...
            [dimidNCoef]);
        netcdf.putAtt(ncid,Coeffy0_ID,'long_name',['Coefficients ' ...
            'of the Y component of the vector origins.']);
        netcdf.putAtt(ncid,Coeffy0_ID,'units','mm');
        netcdf.putAtt(ncid,Coeffy0_ID,'description',['Coefficients ' ...
            'of the vector origin component Y. ' ...
            'The coefficients are: [p00, p10, p01, p20, p11, p02, ' ...
            'p30, p21, p12, p03], such that the values represent: ' ...
            'val(x,y) = p00 + p10*x + p01*y + p20*x^2 + p11*x*y +  '...
            'p02*y^2 + p30*x^3 + p21*x^2*y + p12*x*y^2 + p03*y^3.']);

%=========================================== Give a description of the file        
        % Global 
        varid = netcdf.getConstant('GLOBAL');
        netcdf.putAtt(ncid,varid,'Description',['Experimental data '...
            'used in the manuscript "High-resolution single-camera ' ...
            'photogrammetry: incorporation of refraction at a fluid ' ...
            'interface" by Gonzalez-Vera, A. S., Wilting, T. J. S., ' ...
            'Holten, A. P. C., van Heijst, G. J. F. & Duran-Matute, M. '...
            'Experiments in Fluids 61(1),3. Data was created and used ' ...
            'for experiments by the authors and described in the ' ...
            'manuscript.']);
        netcdf.putAtt(ncid,varid,'Authors',['Gonzalez-Vera, A. S., ' ...
            'Wilting, T. J. S., Holten, A. P. C., van Heijst, ' ...
            'G. J. F. & Duran-Matute, M.']);        
        netcdf.putAtt(ncid,varid,'email for correspondence',...
            'm.duran.matute@tue.nl');
        netcdf.putAtt(ncid,varid,'Institution',['Eindhoven University ' ...
            'of Technology, Department of Applied Physics']);
%         netcdf.putAtt(ncid,varid,'Disclaimer',['This version of the ' ...
%             'data is made available for review purposes. Upon ' ...
%             'acceptance of the manuscript, the data will be made ' ...
%             'publicly available through the 4TU.Center for Research ' ...
%             'data at data.4tu.nl']);
        netcdf.putAtt(ncid,varid,'Source','Laboratory Experiments');
        netcdf.putAtt(ncid,varid,'Creation date',datestr(now));
        
        netcdf.putAtt(ncid,varid,'Title',['Data used for the ' ...
            '"High-resolution single-camera photogrammetry: ' ...
            'incorporation of refraction at a fluid interface"']);
        
        % End defining NetCDF
        netcdf.endDef(ncid);
        
        %-------------------------- Store dimension variables
        netcdf.putVar(ncid,NPol_ID,NL);
        
        %-------------------------- Store patterns
        netcdf.putVar(ncid,Coeffdx_ID,CoeffCal_cdx);
        netcdf.putVar(ncid,Coeffdy_ID,CoeffCal_cdy);
        netcdf.putVar(ncid,Coeffx0_ID,CoeffCal_cx0);
        netcdf.putVar(ncid,Coeffy0_ID,CoeffCal_cy0);
        
        %We're done, close the netcdf
        netcdf.close(ncid);
% 
end
